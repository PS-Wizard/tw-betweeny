/*! tailwindcss v4.1.11 | MIT License | https://tailwindcss.com */
@layer properties;
html,body {
  background-color: #000;
  overflow-x: hidden;
  cursor: url('/images/cursor.png') 0 0, auto !important;
}
:root {
  --text-10-16: clamp(0.625rem, 0.5179rem + 0.4286vw, 1rem);
  --text-14-24: clamp(0.875rem, 0.6964rem + 0.7143vw, 1.5rem);
  --text-16-32: clamp(1rem, 0.7143rem + 1.1429vw, 2rem);
  --text-20-24: clamp(1.25rem, 1.1786rem + 0.2857vw, 1.5rem);
  --text-24-36: clamp(1.5rem, 1.2857rem + 0.8571vw, 2.25rem);
  --text-40-64: clamp(2.5rem, 2.0714rem + 1.7143vw, 4rem);
  --text-48-126: clamp(3rem, 1.6071rem + 5.5714vw, 7.875rem);
  --text-60-120: clamp(3.75rem, 2.5rem + 5vw, 7.5rem);
  --text-64-448: clamp(4rem, -2.8571rem + 27.4286vw, 28rem);
  --text-40-120: clamp(2.5rem, 1.4286rem + 9.1429vw, 7.5rem);
}
.text-40-120 {
  font-size: var(--text-40-120);
}
.text-10-16 {
  font-size: var(--text-10-16);
}
.text-14-24 {
  font-size: var(--text-14-24);
}
.text-16-32 {
  font-size: var(--text-16-32);
}
.text-20-24 {
  font-size: var(--text-20-24);
}
.text-24-36 {
  font-size: var(--text-24-36);
}
.text-40-64 {
  font-size: var(--text-40-64);
}
.text-48-126 {
  font-size: var(--text-48-126);
}
.text-60-120 {
  font-size: var(--text-60-120);
}
.text-64-448 {
  font-size: var(--text-64-448);
}
@font-face {
  font-family: 'Geist';
  src: url('/fonts/Geist.ttf') format('truetype');
  font-weight: normal;
  font-style: normal;
}
@font-face {
  font-family: 'Graffity';
  src: url('/fonts/Graffity-fill.otf') format('opentype');
}
.geist {
  font-family: "Geist",sans-serif;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  font-smooth: always;
}
.graffity {
  font-family: "Graffity", sans-serif;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  font-smooth: always;
  font-weight: normal;
  font-style: normal;
}
body {
  font-family: 'Geist', sans-serif;
}
select#tag-filter {
  appearance: none;
  -webkit-appearance: none;
  -moz-appearance: none;
  background-image: none;
}
code {
  overflow-x: auto;
  padding: 1px 2px;
}
pre {
  padding: 1em;
  border: 1px solid #252525 !important;
  background: #000 !important;
  padding: 0em 2em;
}
img {
  width: 100%;
  border: 1px solid #252525;
  border-radius: 5px;
}
@layer theme, base, components, utilities;
@layer theme {
  :root, :host {
    --font-sans: ui-sans-serif, system-ui, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol',
    'Noto Color Emoji';
    --font-mono: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, 'Liberation Mono', 'Courier New',
    monospace;
    --color-red-300: oklch(80.8% 0.114 19.571);
    --color-yellow-100: oklch(97.3% 0.071 103.193);
    --color-yellow-300: oklch(90.5% 0.182 98.111);
    --color-green-300: oklch(87.1% 0.15 154.449);
    --color-green-500: oklch(72.3% 0.219 149.579);
    --color-green-600: oklch(62.7% 0.194 149.214);
    --color-green-700: oklch(52.7% 0.154 150.069);
    --color-blue-300: oklch(80.9% 0.105 251.813);
    --color-blue-500: oklch(62.3% 0.214 259.815);
    --color-blue-600: oklch(54.6% 0.245 262.881);
    --color-blue-700: oklch(48.8% 0.243 264.376);
    --color-purple-300: oklch(82.7% 0.119 306.383);
    --color-pink-200: oklch(89.9% 0.061 343.231);
    --color-pink-500: oklch(65.6% 0.241 354.308);
    --color-pink-600: oklch(59.2% 0.249 0.584);
    --color-pink-700: oklch(52.5% 0.223 3.958);
    --color-gray-100: oklch(96.7% 0.003 264.542);
    --color-gray-300: oklch(87.2% 0.01 258.338);
    --color-gray-800: oklch(27.8% 0.033 256.848);
    --color-gray-900: oklch(21% 0.034 264.665);
    --color-black: #000;
    --color-white: #fff;
    --spacing: 0.25rem;
    --container-2xl: 42rem;
    --container-5xl: 64rem;
    --container-7xl: 80rem;
    --text-sm: 0.875rem;
    --text-sm--line-height: calc(1.25 / 0.875);
    --text-base: 1rem;
    --text-base--line-height: calc(1.5 / 1);
    --text-lg: 1.125rem;
    --text-lg--line-height: calc(1.75 / 1.125);
    --text-xl: 1.25rem;
    --text-xl--line-height: calc(1.75 / 1.25);
    --text-2xl: 1.5rem;
    --text-2xl--line-height: calc(2 / 1.5);
    --text-4xl: 2.25rem;
    --text-4xl--line-height: calc(2.5 / 2.25);
    --text-5xl: 3rem;
    --text-5xl--line-height: 1;
    --text-6xl: 3.75rem;
    --text-6xl--line-height: 1;
    --text-7xl: 4.5rem;
    --text-7xl--line-height: 1;
    --font-weight-semibold: 600;
    --font-weight-extrabold: 800;
    --leading-tight: 1.25;
    --default-transition-duration: 150ms;
    --default-transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
    --default-font-family: var(--font-sans);
    --default-mono-font-family: var(--font-mono);
  }
}
@layer base {
  *, ::after, ::before, ::backdrop, ::file-selector-button {
    box-sizing: border-box;
    margin: 0;
    padding: 0;
    border: 0 solid;
  }
  html, :host {
    line-height: 1.5;
    -webkit-text-size-adjust: 100%;
    tab-size: 4;
    font-family: var(--default-font-family, ui-sans-serif, system-ui, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji');
    font-feature-settings: var(--default-font-feature-settings, normal);
    font-variation-settings: var(--default-font-variation-settings, normal);
    -webkit-tap-highlight-color: transparent;
  }
  hr {
    height: 0;
    color: inherit;
    border-top-width: 1px;
  }
  abbr:where([title]) {
    -webkit-text-decoration: underline dotted;
    text-decoration: underline dotted;
  }
  h1, h2, h3, h4, h5, h6 {
    font-size: inherit;
    font-weight: inherit;
  }
  a {
    color: inherit;
    -webkit-text-decoration: inherit;
    text-decoration: inherit;
  }
  b, strong {
    font-weight: bolder;
  }
  code, kbd, samp, pre {
    font-family: var(--default-mono-font-family, ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, 'Liberation Mono', 'Courier New', monospace);
    font-feature-settings: var(--default-mono-font-feature-settings, normal);
    font-variation-settings: var(--default-mono-font-variation-settings, normal);
    font-size: 1em;
  }
  small {
    font-size: 80%;
  }
  sub, sup {
    font-size: 75%;
    line-height: 0;
    position: relative;
    vertical-align: baseline;
  }
  sub {
    bottom: -0.25em;
  }
  sup {
    top: -0.5em;
  }
  table {
    text-indent: 0;
    border-color: inherit;
    border-collapse: collapse;
  }
  :-moz-focusring {
    outline: auto;
  }
  progress {
    vertical-align: baseline;
  }
  summary {
    display: list-item;
  }
  ol, ul, menu {
    list-style: none;
  }
  img, svg, video, canvas, audio, iframe, embed, object {
    display: block;
    vertical-align: middle;
  }
  img, video {
    max-width: 100%;
    height: auto;
  }
  button, input, select, optgroup, textarea, ::file-selector-button {
    font: inherit;
    font-feature-settings: inherit;
    font-variation-settings: inherit;
    letter-spacing: inherit;
    color: inherit;
    border-radius: 0;
    background-color: transparent;
    opacity: 1;
  }
  :where(select:is([multiple], [size])) optgroup {
    font-weight: bolder;
  }
  :where(select:is([multiple], [size])) optgroup option {
    padding-inline-start: 20px;
  }
  ::file-selector-button {
    margin-inline-end: 4px;
  }
  ::placeholder {
    opacity: 1;
  }
  @supports (not (-webkit-appearance: -apple-pay-button))  or (contain-intrinsic-size: 1px) {
    ::placeholder {
      color: currentcolor;
      @supports (color: color-mix(in lab, red, red)) {
        color: color-mix(in oklab, currentcolor 50%, transparent);
      }
    }
  }
  textarea {
    resize: vertical;
  }
  ::-webkit-search-decoration {
    -webkit-appearance: none;
  }
  ::-webkit-date-and-time-value {
    min-height: 1lh;
    text-align: inherit;
  }
  ::-webkit-datetime-edit {
    display: inline-flex;
  }
  ::-webkit-datetime-edit-fields-wrapper {
    padding: 0;
  }
  ::-webkit-datetime-edit, ::-webkit-datetime-edit-year-field, ::-webkit-datetime-edit-month-field, ::-webkit-datetime-edit-day-field, ::-webkit-datetime-edit-hour-field, ::-webkit-datetime-edit-minute-field, ::-webkit-datetime-edit-second-field, ::-webkit-datetime-edit-millisecond-field, ::-webkit-datetime-edit-meridiem-field {
    padding-block: 0;
  }
  :-moz-ui-invalid {
    box-shadow: none;
  }
  button, input:where([type='button'], [type='reset'], [type='submit']), ::file-selector-button {
    appearance: button;
  }
  ::-webkit-inner-spin-button, ::-webkit-outer-spin-button {
    height: auto;
  }
  [hidden]:where(:not([hidden='until-found'])) {
    display: none !important;
  }
}
@layer utilities {
  .m-4 {
    margin: calc(var(--spacing) * 4);
  }
  .m-\[10px\~40px\] {
    margin: 10px~40px;
  }
  .m-\[10px\~40px\] {
    margin: clamp(10px, calc(10px + (30 * ((100vw - 320px) / 1280))), 40px);
  }
  .mx-\[20px\~80px\] {
    margin-inline: 20px~80px;
  }
  .mx-auto {
    margin-inline: auto;
  }
  .space-y-\[1\~6\] {
    > :not([hidden]) ~ :not([hidden]) {
      --tw-space-y-reverse: 0;
      margin-top: calc(clamp(4px, calc(4px + (20 * ((100vw - 320px) / 1280))), 24px) * calc(1 - var(--tw-space-y-reverse)));
      margin-bottom: calc(clamp(4px, calc(4px + (20 * ((100vw - 320px) / 1280))), 24px) * var(--tw-space-y-reverse));
    }
  }
  .space-y-\[1\~6\] {
    > :not([hidden]) ~ :not([hidden]) {
      --tw-space-y-reverse: 0;
      margin-top: calc(clamp(4px, calc(4px + (20 * ((100vw - 320px) / 1280))), 24px) * calc(1 - var(--tw-space-y-reverse)));
      margin-bottom: calc(clamp(4px, calc(4px + (20 * ((100vw - 320px) / 1280))), 24px) * var(--tw-space-y-reverse));
    }
  }
  .space-y-\[1\~6\] {
    > :not([hidden]) ~ :not([hidden]) {
      --tw-space-y-reverse: 0;
      margin-top: calc(clamp(4px, calc(4px + (20 * ((100vw - 320px) / 1280))), 24px) * calc(1 - var(--tw-space-y-reverse)));
      margin-bottom: calc(clamp(4px, calc(4px + (20 * ((100vw - 320px) / 1280))), 24px) * var(--tw-space-y-reverse));
    }
  }
  .space-y-\[1\~6\] {
    > :not([hidden]) ~ :not([hidden]) {
      --tw-space-y-reverse: 0;
      margin-top: calc(clamp(4px, calc(4px + (20 * ((100vw - 320px) / 1280))), 24px) * calc(1 - var(--tw-space-y-reverse)));
      margin-bottom: calc(clamp(4px, calc(4px + (20 * ((100vw - 320px) / 1280))), 24px) * var(--tw-space-y-reverse));
    }
  }
  .space-y-\[1\~6\] {
    > :not([hidden]) ~ :not([hidden]) {
      --tw-space-y-reverse: 0;
      margin-top: calc(clamp(4px, calc(4px + (20 * ((100vw - 320px) / 1280))), 24px) * calc(1 - var(--tw-space-y-reverse)));
      margin-bottom: calc(clamp(4px, calc(4px + (20 * ((100vw - 320px) / 1280))), 24px) * var(--tw-space-y-reverse));
    }
  }
  .space-y-\[1\~6\] {
    > :not([hidden]) ~ :not([hidden]) {
      --tw-space-y-reverse: 0;
      margin-top: calc(clamp(4px, calc(4px + (20 * ((100vw - 320px) / 1280))), 24px) * calc(1 - var(--tw-space-y-reverse)));
      margin-bottom: calc(clamp(4px, calc(4px + (20 * ((100vw - 320px) / 1280))), 24px) * var(--tw-space-y-reverse));
    }
  }
  .space-y-\[1\~6\] {
    > :not([hidden]) ~ :not([hidden]) {
      --tw-space-y-reverse: 0;
      margin-top: calc(clamp(4px, calc(4px + (20 * ((100vw - 320px) / 1280))), 24px) * calc(1 - var(--tw-space-y-reverse)));
      margin-bottom: calc(clamp(4px, calc(4px + (20 * ((100vw - 320px) / 1280))), 24px) * var(--tw-space-y-reverse));
    }
  }
  .space-y-\[1\~6\] {
    > :not([hidden]) ~ :not([hidden]) {
      --tw-space-y-reverse: 0;
      margin-top: calc(clamp(4px, calc(4px + (20 * ((100vw - 320px) / 1280))), 24px) * calc(1 - var(--tw-space-y-reverse)));
      margin-bottom: calc(clamp(4px, calc(4px + (20 * ((100vw - 320px) / 1280))), 24px) * var(--tw-space-y-reverse));
    }
  }
  .space-y-\[1\~6\] {
    > :not([hidden]) ~ :not([hidden]) {
      --tw-space-y-reverse: 0;
      margin-top: calc(clamp(4px, calc(4px + (20 * ((100vw - 320px) / 1280))), 24px) * calc(1 - var(--tw-space-y-reverse)));
      margin-bottom: calc(clamp(4px, calc(4px + (20 * ((100vw - 320px) / 1280))), 24px) * var(--tw-space-y-reverse));
    }
  }
  .space-y-\[1\~6\] {
    > :not([hidden]) ~ :not([hidden]) {
      --tw-space-y-reverse: 0;
      margin-top: calc(clamp(4px, calc(4px + (20 * ((100vw - 320px) / 1280))), 24px) * calc(1 - var(--tw-space-y-reverse)));
      margin-bottom: calc(clamp(4px, calc(4px + (20 * ((100vw - 320px) / 1280))), 24px) * var(--tw-space-y-reverse));
    }
  }
  .space-y-\[1\~6\] {
    > :not([hidden]) ~ :not([hidden]) {
      --tw-space-y-reverse: 0;
      margin-top: calc(clamp(4px, calc(4px + (20 * ((100vw - 320px) / 1280))), 24px) * calc(1 - var(--tw-space-y-reverse)));
      margin-bottom: calc(clamp(4px, calc(4px + (20 * ((100vw - 320px) / 1280))), 24px) * var(--tw-space-y-reverse));
    }
  }
  .space-y-\[1\~6\] {
    > :not([hidden]) ~ :not([hidden]) {
      --tw-space-y-reverse: 0;
      margin-top: calc(clamp(4px, calc(4px + (20 * ((100vw - 320px) / 1280))), 24px) * calc(1 - var(--tw-space-y-reverse)));
      margin-bottom: calc(clamp(4px, calc(4px + (20 * ((100vw - 320px) / 1280))), 24px) * var(--tw-space-y-reverse));
    }
  }
  .space-y-\[1\~6\] {
    > :not([hidden]) ~ :not([hidden]) {
      --tw-space-y-reverse: 0;
      margin-top: calc(clamp(4px, calc(4px + (20 * ((100vw - 320px) / 1280))), 24px) * calc(1 - var(--tw-space-y-reverse)));
      margin-bottom: calc(clamp(4px, calc(4px + (20 * ((100vw - 320px) / 1280))), 24px) * var(--tw-space-y-reverse));
    }
  }
  .space-y-\[1\~6\] {
    > :not([hidden]) ~ :not([hidden]) {
      --tw-space-y-reverse: 0;
      margin-top: calc(clamp(4px, calc(4px + (20 * ((100vw - 320px) / 1280))), 24px) * calc(1 - var(--tw-space-y-reverse)));
      margin-bottom: calc(clamp(4px, calc(4px + (20 * ((100vw - 320px) / 1280))), 24px) * var(--tw-space-y-reverse));
    }
  }
  .space-y-\[1\~6\] {
    > :not([hidden]) ~ :not([hidden]) {
      --tw-space-y-reverse: 0;
      margin-top: calc(clamp(4px, calc(4px + (20 * ((100vw - 320px) / 1280))), 24px) * calc(1 - var(--tw-space-y-reverse)));
      margin-bottom: calc(clamp(4px, calc(4px + (20 * ((100vw - 320px) / 1280))), 24px) * var(--tw-space-y-reverse));
    }
  }
  .space-y-\[1\~6\] {
    > :not([hidden]) ~ :not([hidden]) {
      --tw-space-y-reverse: 0;
      margin-top: calc(clamp(4px, calc(4px + (20 * ((100vw - 320px) / 1280))), 24px) * calc(1 - var(--tw-space-y-reverse)));
      margin-bottom: calc(clamp(4px, calc(4px + (20 * ((100vw - 320px) / 1280))), 24px) * var(--tw-space-y-reverse));
    }
  }
  .space-y-\[1\~6\] {
    > :not([hidden]) ~ :not([hidden]) {
      --tw-space-y-reverse: 0;
      margin-top: calc(clamp(4px, calc(4px + (20 * ((100vw - 320px) / 1280))), 24px) * calc(1 - var(--tw-space-y-reverse)));
      margin-bottom: calc(clamp(4px, calc(4px + (20 * ((100vw - 320px) / 1280))), 24px) * var(--tw-space-y-reverse));
    }
  }
  .space-y-\[1\~6\] {
    > :not([hidden]) ~ :not([hidden]) {
      --tw-space-y-reverse: 0;
      margin-top: calc(clamp(4px, calc(4px + (20 * ((100vw - 320px) / 1280))), 24px) * calc(1 - var(--tw-space-y-reverse)));
      margin-bottom: calc(clamp(4px, calc(4px + (20 * ((100vw - 320px) / 1280))), 24px) * var(--tw-space-y-reverse));
    }
  }
  .space-y-\[1\~6\] {
    > :not([hidden]) ~ :not([hidden]) {
      --tw-space-y-reverse: 0;
      margin-top: calc(clamp(4px, calc(4px + (20 * ((100vw - 320px) / 1280))), 24px) * calc(1 - var(--tw-space-y-reverse)));
      margin-bottom: calc(clamp(4px, calc(4px + (20 * ((100vw - 320px) / 1280))), 24px) * var(--tw-space-y-reverse));
    }
  }
  .space-y-\[1\~6\] {
    > :not([hidden]) ~ :not([hidden]) {
      --tw-space-y-reverse: 0;
      margin-top: calc(clamp(4px, calc(4px + (20 * ((100vw - 320px) / 1280))), 24px) * calc(1 - var(--tw-space-y-reverse)));
      margin-bottom: calc(clamp(4px, calc(4px + (20 * ((100vw - 320px) / 1280))), 24px) * var(--tw-space-y-reverse));
    }
  }
  .space-y-\[1\~6\] {
    > :not([hidden]) ~ :not([hidden]) {
      --tw-space-y-reverse: 0;
      margin-top: calc(clamp(4px, calc(4px + (20 * ((100vw - 320px) / 1280))), 24px) * calc(1 - var(--tw-space-y-reverse)));
      margin-bottom: calc(clamp(4px, calc(4px + (20 * ((100vw - 320px) / 1280))), 24px) * var(--tw-space-y-reverse));
    }
  }
  .mt-6 {
    margin-top: calc(var(--spacing) * 6);
  }
  .mt-8 {
    margin-top: calc(var(--spacing) * 8);
  }
  .space-x-\[2\~8\] {
    > :not([hidden]) ~ :not([hidden]) {
      --tw-space-x-reverse: 0;
      margin-left: calc(clamp(8px, calc(8px + (24 * ((100vw - 320px) / 1280))), 32px) * calc(1 - var(--tw-space-x-reverse)));
      margin-right: calc(clamp(8px, calc(8px + (24 * ((100vw - 320px) / 1280))), 32px) * var(--tw-space-x-reverse));
    }
  }
  .space-x-\[2\~8\] {
    > :not([hidden]) ~ :not([hidden]) {
      --tw-space-x-reverse: 0;
      margin-left: calc(clamp(8px, calc(8px + (24 * ((100vw - 320px) / 1280))), 32px) * calc(1 - var(--tw-space-x-reverse)));
      margin-right: calc(clamp(8px, calc(8px + (24 * ((100vw - 320px) / 1280))), 32px) * var(--tw-space-x-reverse));
    }
  }
  .space-x-\[2\~8\] {
    > :not([hidden]) ~ :not([hidden]) {
      --tw-space-x-reverse: 0;
      margin-left: calc(clamp(8px, calc(8px + (24 * ((100vw - 320px) / 1280))), 32px) * calc(1 - var(--tw-space-x-reverse)));
      margin-right: calc(clamp(8px, calc(8px + (24 * ((100vw - 320px) / 1280))), 32px) * var(--tw-space-x-reverse));
    }
  }
  .space-x-\[2\~8\] {
    > :not([hidden]) ~ :not([hidden]) {
      --tw-space-x-reverse: 0;
      margin-left: calc(clamp(8px, calc(8px + (24 * ((100vw - 320px) / 1280))), 32px) * calc(1 - var(--tw-space-x-reverse)));
      margin-right: calc(clamp(8px, calc(8px + (24 * ((100vw - 320px) / 1280))), 32px) * var(--tw-space-x-reverse));
    }
  }
  .space-x-\[2\~8\] {
    > :not([hidden]) ~ :not([hidden]) {
      --tw-space-x-reverse: 0;
      margin-left: calc(clamp(8px, calc(8px + (24 * ((100vw - 320px) / 1280))), 32px) * calc(1 - var(--tw-space-x-reverse)));
      margin-right: calc(clamp(8px, calc(8px + (24 * ((100vw - 320px) / 1280))), 32px) * var(--tw-space-x-reverse));
    }
  }
  .space-x-\[2\~8\] {
    > :not([hidden]) ~ :not([hidden]) {
      --tw-space-x-reverse: 0;
      margin-left: calc(clamp(8px, calc(8px + (24 * ((100vw - 320px) / 1280))), 32px) * calc(1 - var(--tw-space-x-reverse)));
      margin-right: calc(clamp(8px, calc(8px + (24 * ((100vw - 320px) / 1280))), 32px) * var(--tw-space-x-reverse));
    }
  }
  .space-x-\[2\~8\] {
    > :not([hidden]) ~ :not([hidden]) {
      --tw-space-x-reverse: 0;
      margin-left: calc(clamp(8px, calc(8px + (24 * ((100vw - 320px) / 1280))), 32px) * calc(1 - var(--tw-space-x-reverse)));
      margin-right: calc(clamp(8px, calc(8px + (24 * ((100vw - 320px) / 1280))), 32px) * var(--tw-space-x-reverse));
    }
  }
  .space-x-\[2\~8\] {
    > :not([hidden]) ~ :not([hidden]) {
      --tw-space-x-reverse: 0;
      margin-left: calc(clamp(8px, calc(8px + (24 * ((100vw - 320px) / 1280))), 32px) * calc(1 - var(--tw-space-x-reverse)));
      margin-right: calc(clamp(8px, calc(8px + (24 * ((100vw - 320px) / 1280))), 32px) * var(--tw-space-x-reverse));
    }
  }
  .space-x-\[2\~8\] {
    > :not([hidden]) ~ :not([hidden]) {
      --tw-space-x-reverse: 0;
      margin-left: calc(clamp(8px, calc(8px + (24 * ((100vw - 320px) / 1280))), 32px) * calc(1 - var(--tw-space-x-reverse)));
      margin-right: calc(clamp(8px, calc(8px + (24 * ((100vw - 320px) / 1280))), 32px) * var(--tw-space-x-reverse));
    }
  }
  .space-x-\[2\~8\] {
    > :not([hidden]) ~ :not([hidden]) {
      --tw-space-x-reverse: 0;
      margin-left: calc(clamp(8px, calc(8px + (24 * ((100vw - 320px) / 1280))), 32px) * calc(1 - var(--tw-space-x-reverse)));
      margin-right: calc(clamp(8px, calc(8px + (24 * ((100vw - 320px) / 1280))), 32px) * var(--tw-space-x-reverse));
    }
  }
  .space-x-\[2\~8\] {
    > :not([hidden]) ~ :not([hidden]) {
      --tw-space-x-reverse: 0;
      margin-left: calc(clamp(8px, calc(8px + (24 * ((100vw - 320px) / 1280))), 32px) * calc(1 - var(--tw-space-x-reverse)));
      margin-right: calc(clamp(8px, calc(8px + (24 * ((100vw - 320px) / 1280))), 32px) * var(--tw-space-x-reverse));
    }
  }
  .space-x-\[2\~8\] {
    > :not([hidden]) ~ :not([hidden]) {
      --tw-space-x-reverse: 0;
      margin-left: calc(clamp(8px, calc(8px + (24 * ((100vw - 320px) / 1280))), 32px) * calc(1 - var(--tw-space-x-reverse)));
      margin-right: calc(clamp(8px, calc(8px + (24 * ((100vw - 320px) / 1280))), 32px) * var(--tw-space-x-reverse));
    }
  }
  .space-x-\[2\~8\] {
    > :not([hidden]) ~ :not([hidden]) {
      --tw-space-x-reverse: 0;
      margin-left: calc(clamp(8px, calc(8px + (24 * ((100vw - 320px) / 1280))), 32px) * calc(1 - var(--tw-space-x-reverse)));
      margin-right: calc(clamp(8px, calc(8px + (24 * ((100vw - 320px) / 1280))), 32px) * var(--tw-space-x-reverse));
    }
  }
  .space-x-\[2\~8\] {
    > :not([hidden]) ~ :not([hidden]) {
      --tw-space-x-reverse: 0;
      margin-left: calc(clamp(8px, calc(8px + (24 * ((100vw - 320px) / 1280))), 32px) * calc(1 - var(--tw-space-x-reverse)));
      margin-right: calc(clamp(8px, calc(8px + (24 * ((100vw - 320px) / 1280))), 32px) * var(--tw-space-x-reverse));
    }
  }
  .space-x-\[2\~8\] {
    > :not([hidden]) ~ :not([hidden]) {
      --tw-space-x-reverse: 0;
      margin-left: calc(clamp(8px, calc(8px + (24 * ((100vw - 320px) / 1280))), 32px) * calc(1 - var(--tw-space-x-reverse)));
      margin-right: calc(clamp(8px, calc(8px + (24 * ((100vw - 320px) / 1280))), 32px) * var(--tw-space-x-reverse));
    }
  }
  .space-x-\[2\~8\] {
    > :not([hidden]) ~ :not([hidden]) {
      --tw-space-x-reverse: 0;
      margin-left: calc(clamp(8px, calc(8px + (24 * ((100vw - 320px) / 1280))), 32px) * calc(1 - var(--tw-space-x-reverse)));
      margin-right: calc(clamp(8px, calc(8px + (24 * ((100vw - 320px) / 1280))), 32px) * var(--tw-space-x-reverse));
    }
  }
  .space-x-\[2\~8\] {
    > :not([hidden]) ~ :not([hidden]) {
      --tw-space-x-reverse: 0;
      margin-left: calc(clamp(8px, calc(8px + (24 * ((100vw - 320px) / 1280))), 32px) * calc(1 - var(--tw-space-x-reverse)));
      margin-right: calc(clamp(8px, calc(8px + (24 * ((100vw - 320px) / 1280))), 32px) * var(--tw-space-x-reverse));
    }
  }
  .space-x-\[2\~8\] {
    > :not([hidden]) ~ :not([hidden]) {
      --tw-space-x-reverse: 0;
      margin-left: calc(clamp(8px, calc(8px + (24 * ((100vw - 320px) / 1280))), 32px) * calc(1 - var(--tw-space-x-reverse)));
      margin-right: calc(clamp(8px, calc(8px + (24 * ((100vw - 320px) / 1280))), 32px) * var(--tw-space-x-reverse));
    }
  }
  .space-x-\[2\~8\] {
    > :not([hidden]) ~ :not([hidden]) {
      --tw-space-x-reverse: 0;
      margin-left: calc(clamp(8px, calc(8px + (24 * ((100vw - 320px) / 1280))), 32px) * calc(1 - var(--tw-space-x-reverse)));
      margin-right: calc(clamp(8px, calc(8px + (24 * ((100vw - 320px) / 1280))), 32px) * var(--tw-space-x-reverse));
    }
  }
  .space-x-\[2\~8\] {
    > :not([hidden]) ~ :not([hidden]) {
      --tw-space-x-reverse: 0;
      margin-left: calc(clamp(8px, calc(8px + (24 * ((100vw - 320px) / 1280))), 32px) * calc(1 - var(--tw-space-x-reverse)));
      margin-right: calc(clamp(8px, calc(8px + (24 * ((100vw - 320px) / 1280))), 32px) * var(--tw-space-x-reverse));
    }
  }
  .space-x-\[2\~8\] {
    > :not([hidden]) ~ :not([hidden]) {
      --tw-space-x-reverse: 0;
      margin-left: calc(clamp(8px, calc(8px + (24 * ((100vw - 320px) / 1280))), 32px) * calc(1 - var(--tw-space-x-reverse)));
      margin-right: calc(clamp(8px, calc(8px + (24 * ((100vw - 320px) / 1280))), 32px) * var(--tw-space-x-reverse));
    }
  }
  .mx-\[20px\~80px\] {
    margin-left: clamp(20px, calc(20px + (60 * ((100vw - 320px) / 1280))), 80px);
    margin-right: clamp(20px, calc(20px + (60 * ((100vw - 320px) / 1280))), 80px);
  }
  .contents {
    display: contents;
  }
  .flex {
    display: flex;
  }
  .hidden {
    display: none;
  }
  .table {
    display: table;
  }
  .h-6 {
    height: calc(var(--spacing) * 6);
  }
  .h-20 {
    height: calc(var(--spacing) * 20);
  }
  .h-\[8px\~64px\] {
    height: 8px~64px;
  }
  .h-\[8px\~64px\] {
    height: clamp(8px, calc(8px + (56 * ((100vw - 320px) / 1280))), 64px);
  }
  .min-h-screen {
    min-height: 100vh;
  }
  .w-6 {
    width: calc(var(--spacing) * 6);
  }
  .w-\[8px\~64px\] {
    width: 8px~64px;
  }
  .w-\[8px\~64px\] {
    width: clamp(8px, calc(8px + (56 * ((100vw - 320px) / 1280))), 64px);
  }
  .w-\[100px\~300px\] {
    width: 100px~300px;
  }
  .w-\[100px\~300px\] {
    width: clamp(100px, calc(100px + (200 * ((100vw - 320px) / 1280))), 300px);
  }
  .max-w-2xl {
    max-width: var(--container-2xl);
  }
  .max-w-5xl {
    max-width: var(--container-5xl);
  }
  .max-w-7xl {
    max-width: var(--container-7xl);
  }
  .border-collapse {
    border-collapse: collapse;
  }
  .resize {
    resize: both;
  }
  .flex-col {
    flex-direction: column;
  }
  .flex-wrap {
    flex-wrap: wrap;
  }
  .items-center {
    align-items: center;
  }
  .justify-between {
    justify-content: space-between;
  }
  .justify-center {
    justify-content: center;
  }
  .gap-2 {
    gap: calc(var(--spacing) * 2);
  }
  .gap-4 {
    gap: calc(var(--spacing) * 4);
  }
  .gap-8 {
    gap: calc(var(--spacing) * 8);
  }
  .gap-\[4px\~20px\] {
    gap: 4px~20px;
  }
  .gap-\[4\~8\] {
    gap: 4~8;
  }
  .gap-\[6\~8\] {
    gap: 6~8;
  }
  .space-y-8 {
    :where(& > :not(:last-child)) {
      --tw-space-y-reverse: 0;
      margin-block-start: calc(calc(var(--spacing) * 8) * var(--tw-space-y-reverse));
      margin-block-end: calc(calc(var(--spacing) * 8) * calc(1 - var(--tw-space-y-reverse)));
    }
  }
  .space-y-\[1\~6\] {
    :where(& > :not(:last-child)) {
      --tw-space-y-reverse: 0;
      margin-block-start: calc(1~6 * var(--tw-space-y-reverse));
      margin-block-end: calc(1~6 * calc(1 - var(--tw-space-y-reverse)));
    }
  }
  .space-x-\[2\~8\] {
    :where(& > :not(:last-child)) {
      --tw-space-x-reverse: 0;
      margin-inline-start: calc(2~8 * var(--tw-space-x-reverse));
      margin-inline-end: calc(2~8 * calc(1 - var(--tw-space-x-reverse)));
    }
  }
  .rounded-full {
    border-radius: calc(infinity * 1px);
  }
  .border {
    border-style: var(--tw-border-style);
    border-width: 1px;
  }
  .border-black {
    border-color: var(--color-black);
  }
  .border-black\/20 {
    border-color: color-mix(in srgb, #000 20%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      border-color: color-mix(in oklab, var(--color-black) 20%, transparent);
    }
  }
  .bg-black {
    background-color: var(--color-black);
  }
  .bg-blue-300 {
    background-color: var(--color-blue-300);
  }
  .bg-blue-500 {
    background-color: var(--color-blue-500);
  }
  .bg-blue-600 {
    background-color: var(--color-blue-600);
  }
  .bg-blue-700 {
    background-color: var(--color-blue-700);
  }
  .bg-gray-100 {
    background-color: var(--color-gray-100);
  }
  .bg-gray-300 {
    background-color: var(--color-gray-300);
  }
  .bg-green-300 {
    background-color: var(--color-green-300);
  }
  .bg-green-500 {
    background-color: var(--color-green-500);
  }
  .bg-green-600 {
    background-color: var(--color-green-600);
  }
  .bg-green-700 {
    background-color: var(--color-green-700);
  }
  .bg-pink-200 {
    background-color: var(--color-pink-200);
  }
  .bg-pink-500 {
    background-color: var(--color-pink-500);
  }
  .bg-pink-600 {
    background-color: var(--color-pink-600);
  }
  .bg-pink-700 {
    background-color: var(--color-pink-700);
  }
  .bg-purple-300 {
    background-color: var(--color-purple-300);
  }
  .bg-red-300 {
    background-color: var(--color-red-300);
  }
  .bg-yellow-300 {
    background-color: var(--color-yellow-300);
  }
  .bg-gradient-to-br {
    --tw-gradient-position: to bottom right in oklab;
    background-image: linear-gradient(var(--tw-gradient-stops));
  }
  .from-yellow-100 {
    --tw-gradient-from: var(--color-yellow-100);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }
  .via-pink-200 {
    --tw-gradient-via: var(--color-pink-200);
    --tw-gradient-via-stops: var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-via) var(--tw-gradient-via-position), var(--tw-gradient-to) var(--tw-gradient-to-position);
    --tw-gradient-stops: var(--tw-gradient-via-stops);
  }
  .to-purple-300 {
    --tw-gradient-to: var(--color-purple-300);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }
  .p-4 {
    padding: calc(var(--spacing) * 4);
  }
  .p-\[5px\~30px\] {
    padding: 5px~30px;
  }
  .p-\[5px\~30px\] {
    padding: clamp(5px, calc(5px + (25 * ((100vw - 320px) / 1280))), 30px);
  }
  .px-4 {
    padding-inline: calc(var(--spacing) * 4);
  }
  .px-6 {
    padding-inline: calc(var(--spacing) * 6);
  }
  .px-\[3\~6\] {
    padding-inline: 3~6;
  }
  .px-\[4\~8\] {
    padding-inline: 4~8;
  }
  .px-\[4\~12\] {
    padding-inline: 4~12;
  }
  .py-3 {
    padding-block: calc(var(--spacing) * 3);
  }
  .py-6 {
    padding-block: calc(var(--spacing) * 6);
  }
  .py-12 {
    padding-block: calc(var(--spacing) * 12);
  }
  .py-16 {
    padding-block: calc(var(--spacing) * 16);
  }
  .py-\[1\~3\] {
    padding-block: 1~3;
  }
  .py-\[16-32\] {
    padding-block: 16-32;
  }
  .py-\[16\~32\] {
    padding-block: 16~32;
  }
  .py-\[1\~3\] {
    padding-top: clamp(4px, calc(4px + (8 * ((100vw - 320px) / 1280))), 12px);
    padding-bottom: clamp(4px, calc(4px + (8 * ((100vw - 320px) / 1280))), 12px);
  }
  .py-\[16\~32\] {
    padding-top: clamp(64px, calc(64px + (64 * ((100vw - 320px) / 1280))), 128px);
    padding-bottom: clamp(64px, calc(64px + (64 * ((100vw - 320px) / 1280))), 128px);
  }
  .px-\[3\~6\] {
    padding-left: clamp(12px, calc(12px + (12 * ((100vw - 320px) / 1280))), 24px);
    padding-right: clamp(12px, calc(12px + (12 * ((100vw - 320px) / 1280))), 24px);
  }
  .px-\[4\~8\] {
    padding-left: clamp(16px, calc(16px + (16 * ((100vw - 320px) / 1280))), 32px);
    padding-right: clamp(16px, calc(16px + (16 * ((100vw - 320px) / 1280))), 32px);
  }
  .px-\[4\~12\] {
    padding-left: clamp(16px, calc(16px + (32 * ((100vw - 320px) / 1280))), 48px);
    padding-right: clamp(16px, calc(16px + (32 * ((100vw - 320px) / 1280))), 48px);
  }
  .text-center {
    text-align: center;
  }
  .text-2xl {
    font-size: var(--text-2xl);
    line-height: var(--tw-leading, var(--text-2xl--line-height));
  }
  .text-4xl {
    font-size: var(--text-4xl);
    line-height: var(--tw-leading, var(--text-4xl--line-height));
  }
  .text-base {
    font-size: var(--text-base);
    line-height: var(--tw-leading, var(--text-base--line-height));
  }
  .text-lg {
    font-size: var(--text-lg);
    line-height: var(--tw-leading, var(--text-lg--line-height));
  }
  .text-sm {
    font-size: var(--text-sm);
    line-height: var(--tw-leading, var(--text-sm--line-height));
  }
  .text-\[4xl\~7xl\] {
    font-size: clamp(36px, calc(36px + (36 * ((100vw - 320px) / 1280))), 72px);
  }
  .text-\[12px\~24px\] {
    font-size: clamp(12px, calc(12px + (12 * ((100vw - 320px) / 1280))), 24px);
  }
  .text-\[lg\~xl\] {
    font-size: clamp(18px, calc(18px + (2 * ((100vw - 320px) / 1280))), 20px);
  }
  .text-\[sm\~4xl\] {
    font-size: clamp(14px, calc(14px + (22 * ((100vw - 320px) / 1280))), 36px);
  }
  .leading-tight {
    --tw-leading: var(--leading-tight);
    line-height: var(--leading-tight);
  }
  .font-extrabold {
    --tw-font-weight: var(--font-weight-extrabold);
    font-weight: var(--font-weight-extrabold);
  }
  .font-semibold {
    --tw-font-weight: var(--font-weight-semibold);
    font-weight: var(--font-weight-semibold);
  }
  .text-\[4xl\~7xl\] {
    color: 4xl~7xl;
  }
  .text-\[12px\~24px\] {
    color: 12px~24px;
  }
  .text-\[lg\~xl\] {
    color: lg~xl;
  }
  .text-\[sm\~4xl\] {
    color: sm~4xl;
  }
  .text-black {
    color: var(--color-black);
  }
  .text-gray-800 {
    color: var(--color-gray-800);
  }
  .text-white {
    color: var(--color-white);
  }
  .underline {
    text-decoration-line: underline;
  }
  .outline {
    outline-style: var(--tw-outline-style);
    outline-width: 1px;
  }
  .transition {
    transition-property: color, background-color, border-color, outline-color, text-decoration-color, fill, stroke, --tw-gradient-from, --tw-gradient-via, --tw-gradient-to, opacity, box-shadow, transform, translate, scale, rotate, filter, -webkit-backdrop-filter, backdrop-filter, display, visibility, content-visibility, overlay, pointer-events;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }
  .hover\:bg-black\/10 {
    &:hover {
      @media (hover: hover) {
        background-color: color-mix(in srgb, #000 10%, transparent);
        @supports (color: color-mix(in lab, red, red)) {
          background-color: color-mix(in oklab, var(--color-black) 10%, transparent);
        }
      }
    }
  }
  .hover\:bg-gray-900 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-gray-900);
      }
    }
  }
  .hover\:underline {
    &:hover {
      @media (hover: hover) {
        text-decoration-line: underline;
      }
    }
  }
  .sm\:mx-0 {
    @media (width >= 40rem) {
      margin-inline: calc(var(--spacing) * 0);
    }
  }
  .sm\:flex-row {
    @media (width >= 40rem) {
      flex-direction: row;
    }
  }
  .sm\:justify-start {
    @media (width >= 40rem) {
      justify-content: flex-start;
    }
  }
  .sm\:px-6 {
    @media (width >= 40rem) {
      padding-inline: calc(var(--spacing) * 6);
    }
  }
  .sm\:px-8 {
    @media (width >= 40rem) {
      padding-inline: calc(var(--spacing) * 8);
    }
  }
  .sm\:py-24 {
    @media (width >= 40rem) {
      padding-block: calc(var(--spacing) * 24);
    }
  }
  .sm\:text-left {
    @media (width >= 40rem) {
      text-align: left;
    }
  }
  .sm\:text-5xl {
    @media (width >= 40rem) {
      font-size: var(--text-5xl);
      line-height: var(--tw-leading, var(--text-5xl--line-height));
    }
  }
  .sm\:text-base {
    @media (width >= 40rem) {
      font-size: var(--text-base);
      line-height: var(--tw-leading, var(--text-base--line-height));
    }
  }
  .sm\:text-lg {
    @media (width >= 40rem) {
      font-size: var(--text-lg);
      line-height: var(--tw-leading, var(--text-lg--line-height));
    }
  }
  .sm\:text-xl {
    @media (width >= 40rem) {
      font-size: var(--text-xl);
      line-height: var(--tw-leading, var(--text-xl--line-height));
    }
  }
  .md\:flex {
    @media (width >= 48rem) {
      display: flex;
    }
  }
  .md\:hidden {
    @media (width >= 48rem) {
      display: none;
    }
  }
  .md\:py-32 {
    @media (width >= 48rem) {
      padding-block: calc(var(--spacing) * 32);
    }
  }
  .md\:text-6xl {
    @media (width >= 48rem) {
      font-size: var(--text-6xl);
      line-height: var(--tw-leading, var(--text-6xl--line-height));
    }
  }
  .md\:text-xl {
    @media (width >= 48rem) {
      font-size: var(--text-xl);
      line-height: var(--tw-leading, var(--text-xl--line-height));
    }
  }
  .lg\:px-8 {
    @media (width >= 64rem) {
      padding-inline: calc(var(--spacing) * 8);
    }
  }
  .lg\:px-12 {
    @media (width >= 64rem) {
      padding-inline: calc(var(--spacing) * 12);
    }
  }
  .lg\:text-7xl {
    @media (width >= 64rem) {
      font-size: var(--text-7xl);
      line-height: var(--tw-leading, var(--text-7xl--line-height));
    }
  }
}
@property --tw-space-y-reverse {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-space-x-reverse {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-border-style {
  syntax: "*";
  inherits: false;
  initial-value: solid;
}
@property --tw-gradient-position {
  syntax: "*";
  inherits: false;
}
@property --tw-gradient-from {
  syntax: "<color>";
  inherits: false;
  initial-value: #0000;
}
@property --tw-gradient-via {
  syntax: "<color>";
  inherits: false;
  initial-value: #0000;
}
@property --tw-gradient-to {
  syntax: "<color>";
  inherits: false;
  initial-value: #0000;
}
@property --tw-gradient-stops {
  syntax: "*";
  inherits: false;
}
@property --tw-gradient-via-stops {
  syntax: "*";
  inherits: false;
}
@property --tw-gradient-from-position {
  syntax: "<length-percentage>";
  inherits: false;
  initial-value: 0%;
}
@property --tw-gradient-via-position {
  syntax: "<length-percentage>";
  inherits: false;
  initial-value: 50%;
}
@property --tw-gradient-to-position {
  syntax: "<length-percentage>";
  inherits: false;
  initial-value: 100%;
}
@property --tw-leading {
  syntax: "*";
  inherits: false;
}
@property --tw-font-weight {
  syntax: "*";
  inherits: false;
}
@property --tw-outline-style {
  syntax: "*";
  inherits: false;
  initial-value: solid;
}
@layer properties {
  @supports ((-webkit-hyphens: none) and (not (margin-trim: inline))) or ((-moz-orient: inline) and (not (color:rgb(from red r g b)))) {
    *, ::before, ::after, ::backdrop {
      --tw-space-y-reverse: 0;
      --tw-space-x-reverse: 0;
      --tw-border-style: solid;
      --tw-gradient-position: initial;
      --tw-gradient-from: #0000;
      --tw-gradient-via: #0000;
      --tw-gradient-to: #0000;
      --tw-gradient-stops: initial;
      --tw-gradient-via-stops: initial;
      --tw-gradient-from-position: 0%;
      --tw-gradient-via-position: 50%;
      --tw-gradient-to-position: 100%;
      --tw-leading: initial;
      --tw-font-weight: initial;
      --tw-outline-style: solid;
    }
  }
}
